// Settings Views - Refactored and Optimized
// Unified with design system variables and mixins

@use "../../core/variables" as *;
@use "../../core/mixins" as *;
@use "../../core/colorize" as *;

@layer rs-settings {

    .settings-view {
        display: grid;
        gap: var(--gap-xl);
        padding: var(--gap-xl);
        border-radius: 0px;
        @include surface(var(--surface-opacity-subtle));
        min-inline-size: 0;

        span {
            block-size: max-content;
            line-height: normal;
        }
    }

    .settings-hero {
        display: grid;
        grid-template-columns: auto 1fr;
        gap: var(--gap-lg);
        align-items: center;
        padding: var(--padding-xl);
        border-radius: var(--radius-lg);
        @include surface(var(--surface-opacity-default));
        @include border-color(var(--surface-opacity-emphasis));
        border: 1px solid;
        @include text-color(0);

        .hero-icon {
            inline-size: clamp(3rem, 4vw, 3.5rem);
            block-size: clamp(3rem, 4vw, 3.5rem);
            @include grid-center;
            border-radius: 50%;
            @include surface(var(--surface-opacity-default));
            @include border-color(var(--surface-opacity-emphasis));
            border: 1px solid;

            ui-icon {
                --icon-size: clamp(1.6rem, 2.4vw, 1.9rem);
                --icon-color: currentColor;
            }
        }

        .hero-body {
            display: grid;
            gap: var(--gap-sm);
            min-inline-size: 0;

            h1 {
                margin: 0;
                font-size: var(--font-2xl);
                font-weight: var(--font-weight-bold);
            }

            p {
                margin: 0;
                font-size: var(--font-base);
                color: --c2-on-surface(0.04, var(--current, currentColor));
            }
        }
    }

    .settings-nav {
        display: flex;
        gap: var(--gap-md);
        @include scrollable("x");
        @include hide-scrollbar;
        padding: var(--padding-xs);
        border-radius: var(--radius-lg);
        @include surface(var(--surface-opacity-subtle));
        @include border-color(var(--surface-opacity-emphasis));
        border: 1px solid;
    }

    .settings-tab {
        @include flex-center;
        gap: var(--gap-sm);
        padding: var(--padding-sm) var(--padding-lg);
        border-radius: var(--radius-full);
        border: 1px solid transparent;
        background: transparent;
        @include text-color(0);
        cursor: pointer;
        transition: var(--transition-colors);
        font-size: var(--font-sm);
        white-space: nowrap;

        ui-icon {
            --icon-size: var(--icon-size-md);
        }

        &.is-active {
            @include surface(var(--contrast-opacity-subtle));
            @include border-color(var(--contrast-opacity-default));
        }

        &:hover:not(.is-active) {
            @include surface(var(--surface-opacity-default));
        }
    }

    .settings-form {
        display: grid;
        gap: var(--gap-xl);
        min-inline-size: 0;
        grid-template-rows: minmax(0px, max-content) minmax(0px, max-content);
        block-size: max-content;
    }

    .settings-panels {
        display: grid;
        gap: var(--gap-xl);
        min-inline-size: 0;
    }

    .settings-panel {
        @include panel-base;
        justify-content: start;
        block-size: max-content;

        &:focus-visible {
            @include focus-ring();
        }
    }

    .panel-header {
        display: grid;
        gap: var(--gap-xs);
        min-inline-size: 0;
        inline-size: stretch;
        text-align: start;
        padding: var(--padding-sm);

        h2 {
            margin: 0;
            font-size: var(--font-xl);
        }

        p {
            margin: 0;
            font-size: var(--font-sm);
            color: --c2-on-surface(0.04, var(--current, currentColor));
        }
    }

    .settings-group {
        @include surface(var(--surface-opacity-default));
        border: none;
        border-radius: var(--radius-lg);

        &:not(.is-collapsible) {
            padding: var(--padding-lg);
            display: grid;
            gap: var(--gap-md);
        }

        &.is-collapsible {
            padding: 0;

            summary {
                display: flex;
                flex-direction: column;
                gap: var(--gap-xs);
                padding: var(--padding-lg);
                cursor: pointer;
                list-style: none;
                outline: none;
            }

            .group-body {
                padding: 0 var(--padding-lg) var(--padding-lg);
                display: grid;
                gap: var(--gap-md);
            }
        }

        .group-header {
            display: grid;
            gap: var(--gap-xs);

            h3 {
                margin: 0;
                font-size: var(--font-md);
                text-align: center;
            }

            p {
                margin: 0;
                font-size: var(--font-sm);
                color: --c2-on-surface(0.06, var(--current, currentColor));
            }
        }

        .group-title {
            font-size: var(--font-base);
            font-weight: var(--font-weight-semibold);
        }

        .group-note {
            font-size: var(--font-sm);
            color: --c2-on-surface(0.06, var(--current, currentColor));
        }
    }

    .group-body {
        display: grid;
        gap: var(--gap-md);
    }

    .field {
        display: grid;
        gap: var(--gap-xs);
        min-inline-size: 0;

        .field-label {
            font-size: var(--font-sm);
            font-weight: var(--font-weight-semibold);
            color: --c2-on-surface(0.04, var(--current, currentColor));
        }

        .field-hint {
            font-size: var(--font-xs);
            color: --c2-on-surface(0.06, var(--current, currentColor));
        }

        ::picker(select) {
            background: transparent;
            background-color: transparent;
        }

        input.field-control {
            border-radius: var(--form-radius);
            font-variant-numeric: tabular-nums;
        }

        .field-control,
        .field-control option {
            @include input-base;
        }

        select.field-control {
            appearance: none;
            -webkit-appearance: none;
            -moz-appearance: none;
            padding-inline-end: clamp(2rem, 1.8vw, 2.4rem);
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%23ffffffb3'%3e%3cpath d='M4.2 6.4a.75.75 0 0 1 1.06-.05L8 8.68l2.74-2.33a.75.75 0 1 1 .98 1.14l-3.24 2.75a.75.75 0 0 1-.98 0L4.25 7.49a.75.75 0 0 1-.05-1.06z'/%3e%3c/svg%3e");
            background-repeat: no-repeat;
            background-position: right var(--padding-lg) center;
            background-size: var(--icon-size-sm);
            border-radius: var(--form-radius);
        }

        select.field-control,
        ::picker(select) {
            appearance: base-select;
            border: none;
            outline: none;
        }

        select.field-control {
            display: block;
            block-size: max-content;
        }

        select.field-control option {
            appearance: none;
            @include flex-center;
            justify-content: start;
            block-size: max-content;
            gap: var(--gap-xs);
            min-inline-size: 0;
            border: none;
            outline: none;
            @include surface(var(--surface-opacity-muted));

            &:hover {
                @include surface(var(--surface-opacity-muted));
            }

            &:focus-visible {
                @include surface(var(--surface-opacity-muted));
            }

            &:checked {
                @include text-color(0);
                @include surface(var(--surface-opacity-strong));

                &:hover {
                    @include surface(var(--surface-opacity-emphasis));
                }
            }

            &:first-of-type {
                border-radius: var(--radius-sm) var(--radius-sm) 0 0;
            }

            &:last-of-type {
                border-radius: 0 0 var(--radius-sm) var(--radius-sm);
            }

            &:not(&:last-of-type) {
                border-bottom: none;
            }
        }


    }

    .settings-actions {
        @include flex-between;
        gap: var(--gap-md);
        margin-top: var(--gap-sm);
        padding: var(--padding-sm);

        .btn.save {
            @include button-variant(var(--contrast-opacity-subtle));
            @include border-color(var(--contrast-opacity-default));
            border: 1px solid;
            @include text-color(0);

            &:hover {
                @include surface(var(--contrast-opacity-muted));
            }
        }

        .save-status {
            font-size: var(--font-sm);
            color: --c2-on-surface(0.06, var(--current, currentColor));
        }
    }

    // Mobile optimizations
    @include breakpoint("md") {
        .settings-view {
            padding: var(--padding-lg);
        }

        .settings-hero {
            grid-template-columns: 1fr;
            text-align: center;
            justify-items: center;
        }

        .settings-tab {
            flex: 1 0 auto;
        }

        .settings-panel {
            padding: var(--padding-lg);
        }

        .settings-actions {
            flex-direction: column-reverse;
            align-items: stretch;

            .btn.save {
                justify-content: center;
            }
        }
    }
}
