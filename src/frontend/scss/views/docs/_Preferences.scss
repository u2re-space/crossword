// Preferences Views - Refactored and Optimized
// Unified with design system variables and mixins

@use "../../core/variables" as *;
@use "../../core/mixins" as *;
@use "../../core/colorize" as *;

@layer rs-preferences {
    [data-type="preferences"],
    [data-type="quests"] {
        display: flex;
        flex-direction: column;
        gap: var(--gap-xs);

        @include scrollable("y");
        @include surface();
    }

    .preferences-view {
        display: grid;
        gap: var(--gap-xl);
        border-radius: var(--radius-lg);
        padding: 0px;

        @include surface(0);

        .view-toolbar {
            position: sticky;
            inset-block-start: 0;
            z-index: 4;
            display: flex;
            justify-content: flex-end;
            padding-block-end: var(--padding-md);
            @include backdrop-blur();

            .button-set {
                display: flex;
                flex-wrap: wrap;
                gap: var(--gap-md);

                button {
                    font-size: var(--font-sm);

                    @include button-variant(0);
                }
            }
        }

        [data-type="preferences"] {
            display: grid;
            gap: var(--gap-md);
        }

        .preference-accordion {
            @include accordion-base;

            &[open] {
                --color-shade: var(--surface-opacity-emphasis);
            }

            summary {
                display: grid;
                grid-template-columns: auto 1fr auto auto;
                gap: var(--gap-md);
                align-items: center;
                padding: var(--padding-lg);
                cursor: pointer;

                //
                @include surface(0);

                span {
                    font-weight: var(--font-weight-semibold);
                    font-size: var(--font-md);

                    //
                    @include text-truncate;
                }

                button.plain {
                    inline-size: 2rem;
                    block-size: 2rem;
                    border-radius: var(--radius-full);
                    border: none;
                    background: transparent;
                    color: inherit;
                    cursor: pointer;
                    transition: var(--transition-colors);

                    //
                    @include grid-center;
                    @include surface(var(--surface-opacity-default));
                }
            }

            .spoiler-content {
                padding: var(--padding-xs) var(--padding-lg) var(--padding-xl);
                display: grid;
                gap: var(--gap-md);

                //
                @include scrollable("y");

                md-view {
                    inline-size: 100%;
                    min-block-size: 4rem;
                    color-scheme: light only;
                }

                .ai-spoiler {
                    border-radius: var(--radius-lg);
                    border: 1px solid;

                    //
                    @include border-color(var(--surface-opacity-strong));
                    @include surface(var(--surface-opacity-default));

                    summary {
                        gap: var(--gap-sm);
                        cursor: pointer;
                        padding: var(--padding-md) var(--padding-lg);
                        justify-content: flex-start;

                        @include flex-center;

                        ui-icon {
                            --icon-size: var(--icon-size-md);
                        }

                        span {
                            font-weight: var(--font-weight-semibold);
                        }
                    }

                    .ai-answer {
                        padding: var(--padding-md) var(--padding-lg) var(--padding-xl);
                        border-radius: var(--radius-md);
                        @include surface(var(--surface-opacity-emphasis));
                    }
                }
            }
        }

        // Mobile optimizations
        @include breakpoint("md") {
            padding: var(--padding-lg);

            .view-toolbar {
                justify-content: stretch;

                .button-set {
                    justify-content: stretch;

                    button {
                        flex: 1 1 calc(50% - 0.5rem);
                        justify-content: center;
                    }
                }
            }

            .preference-accordion summary {
                grid-template-columns: auto 1fr auto;
                gap: var(--gap-sm);

                button.plain span {
                    display: none;
                }
            }
        }
    }
}
