@use "../../core/colorize" as *;

//
@layer rs-fields-general {


    ui-longtext {
        --thumb-size: 1.25rem;
        --track-height: 0.25rem;
        display: inline-block;
    }

    ui-slider[variant="slider"] {
        block-size: 1rem;
        border-radius: 9999px;
    }

    .u2-input, .u2-field {
        display: grid;
        gap: 0.25rem;
    }

    // Date/Time Editor Styles
    .field-editor {
        display: grid;
        gap: 0.5rem;
    }

    //
    .field-inputs {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
        gap: 0.5rem;
        align-items: center;
    }

    //
    .field-error {
        --current: var(--color-error);
    }

    //
    .field-helper {
        color: --c2-on-surface(var(--text-tint-muted), var(--current, currentColor));
        font-size: 0.75rem;
    }

    // Enhanced select dropdown styling
    select {
        display: block;
        block-size: max-content;
        cursor: pointer;
        background: none;
        padding: 0;
        user-select: none;

        text-indent: 0.01px;
        text-overflow: '';
        text-overflow: "";
        color: transparent !important;

        @include select-dropdown;

        &::-ms-expand {
            display: none;
        }

        // Picker styling
        &, &::picker(select) {
            appearance: base-select;
            outline: none;
        }

        &::picker(select) {
            background: transparent;
            background-color: transparent;
            padding: 0;
        }
    }

    //
    ::picker(select) {
        appearance: base-select;
        border: none;
        outline: none;
        background: transparent;
        background-color: transparent;
        line-height: 0;
        padding: 0;
    }

    // Option styling with proper nesting
    option {
        appearance: none;
        display: flex;
        flex-direction: row;
        place-content: center;
        place-items: center;
        justify-content: start;
        block-size: max-content;
        gap: var(--space-xs);
        min-inline-size: 0;
        outline: none;
        user-select: none;
        cursor: pointer;

        @include solid-colorize("&");
        @include font-style("&", ("size": "sm"));

        & {
            border-width: 0px;
            border-inline-start-width: 0.5px;
            border-inline-end-width: 0.5px;
        }

        &:first-of-type {
            border-radius: var(--radius-sm) var(--radius-sm) 0 0;
            border-block-start-width: 0.5px;
        }

        &:last-of-type {
            border-radius: 0 0 var(--radius-sm) var(--radius-sm);
            border-block-end-width: 0.5px;
        }

        &:not(:last-of-type) {
            border-block-end: none;
            border-block-end-width: 0.5px;
        }
    }

    //
    input::-webkit-outer-spin-button,
    input::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }

    // Enhanced button styling
    button {

        &.btn,
        &.save,
        &.cancel {
            gap: var(--space-sm);
            padding: calc(var(--space-sm) * 0.9) var(--space-md);
            border-radius: var(--radius-xl);

            @include button-base;
        }

        // Semantic button variants
        &.save { --current: var(--color-success); }
        &.cancel { --current: var(--color-error); }
    }

    .btn {
        @include button-base;
        gap: var(--space-sm);
        padding: calc(var(--space-sm) * 0.9) var(--space-md);
        border-radius: var(--radius-xl);

        &.save { --current: var(--color-success); }
        &.cancel { --current: var(--color-error); }
    }

    // Enhanced input field styling
    input:where([type="datetime-local"], [type="date"], [type="time"], [type="text"], [type="number"], [type="email"], [type="url"], [type="tel"], [type="password"], [type="search"], [type="month"], [type="week"]) {

        // Special styling for inputs that might have dropdowns/pickers
        &:where([type="date"], [type="time"], [type="datetime-local"], [type="month"], [type="week"]) {
            padding-inline-end: calc(var(--space-lg) * 2);

            @include form-field-base;
        }
    }

    // Enhanced checkbox and radio button styling
    input:where([type="checkbox"], [type="radio"]),
    button[data-icon-only] {

        --icon-color: currentColor;
        content: " ";

        @include checkbox-radio-base;

        &::before {
            --icon-color: inherit;
            line-height: 0;
            background-color: var(--icon-color, currentColor);
        }
    }

    // Radio button specific styling
    input[type="radio"]:checked {
        border-radius: var(--radius-full);
    }

    // Numeric and date inputs with tabular numbers
    input:where([type="number"], [type="date"], [type="time"], [type="datetime-local"]) {
        font-variant-numeric: tabular-nums;
    }

}
