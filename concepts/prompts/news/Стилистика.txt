Предлагаю сделать улучшенный дизайн моего веб-приложения...
- Модалы и окна настроек должны умещаться в малые экраны и быть Mobile Friendly.
- В окнах настроек желательно включить ещё тонкие скроллбары (если размеров не хватает).
- Либо же сделать (как альтернативный вариант предложения) сделать tab'ы для самих настроек.
- Entity Editor так должен быть Mobile Friendly, и consistent дизайн, как можно меньше резких линий бордюров, и скруглённости.
- Добавить Contact Add (в Contacts View) и Service Add (в Services View), где открывается та же модалка с редактированием нужных properties (fields). 
- В Preferences и Quests все пункты должны быть подобны спойлерами т.е. раскрываться контент при активации.
- В пунктах Quests также должна быть дополнительная кнопка, для запроса помощей от ИИ, а его решение отображаться в своей графе (тоже спойлер).
- В настройках должна быть возможность указать, какой конкретно файл или ID из Preferences будет использоваться для генерации планов (Timeline).
- В Timeline Views должна быть "магическая" кнопка составить заветный план... если в Preferences нету никакой идеи, ИИ попытается использовать что-то по Default.
- CSS должен быть относительно и более менее оптимизирован, и в то же время, хорошо организован по SCSS, желательны реализации '@layer'.

Среди инструментов сбора и обработки данных будут иметься:
- Буфер обмена текста или изображений (используется анализ и распознавание)
- Share Target (PWA), Snipping Tools (расширение хрома), FilePicker, DirectoryPicker, Drag&Drop (в основном Desktop)
- Среди API, могут применяться (и прослеживаться) Weather, некоторые доступные новостные источники, если есть доступ к почте, то и письма...
  - В данный момент, этот вопрос до сих пор остаётся в рассмотрении, и не факт что будет реализован
- Также DirectoryPicker (подключение как RW directory handler) также может быть использован для экспорта данных.
- Один из вариантов использование входящих данных
  - Внесение данных как Entity базу
  - Распознавание как Markdown/KaTeX
- Возможно также планируется реализация и QR кодов...
- Входные данные могут быть такие, как изображения или скриншоты, формулы, коды HTML, MathML, просто текст, Markdown, KaTeX, JSON, или иные некоторые (прочие) форматы...
- Подавляющее большинство операцией данными с преобразованиями и пере-обработкой доверяется именно к ИИ, автоматически проходят как правило достаточно простые формы.
- При наступлении времени (по намеченному timeline) должно приходить Push уведомление (либо по PWA, или по Chrome Extension).
- В версии Chrome расширении теоретически могло бы существовать режим фокуса (подобие помодоро).

В качестве синхронизации (между устройствами) будут доступны WebDav сервера/точки, важно при этом создавать свои WebDav сервера для надежности.
В Chrome приложении пока не менять New Tab Page, следует данный UI внедрить именно в настройки этого расширения.
В Content скриптах (вызываемых из фоновых) могут использоваться специальные хаки чтобы задействовать операции копирования.
Также желательна реализации механизмов кратких Toast сообщений и уведомлений (в Chrome Extension может существовать в любой открытой вкладке).
